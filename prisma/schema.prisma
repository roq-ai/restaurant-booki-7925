generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model event {
  id                           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                         String         @db.VarChar(255)
  description                  String?        @db.VarChar(255)
  venue                        String         @db.VarChar(255)
  director_id                  String?        @db.Uuid
  coach_id                     String?        @db.Uuid
  created_at                   DateTime       @default(now()) @db.Timestamp(6)
  updated_at                   DateTime       @default(now()) @db.Timestamp(6)
  user_event_coach_idTouser    user?          @relation("event_coach_idTouser", fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_event_director_idTouser user?          @relation("event_director_idTouser", fields: [director_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  registration                 registration[]
}

model player {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  registration registration[]
}

model registration {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id  String?  @db.Uuid
  event_id   String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  event      event?   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player     player?  @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                         String   @unique @db.VarChar(255)
  firstName                     String?  @db.VarChar(255)
  lastName                      String?  @db.VarChar(255)
  roq_user_id                   String   @db.VarChar(255)
  tenant_id                     String   @db.VarChar(255)
  created_at                    DateTime @default(now()) @db.Timestamp(6)
  updated_at                    DateTime @default(now()) @db.Timestamp(6)
  event_event_coach_idTouser    event[]  @relation("event_coach_idTouser")
  event_event_director_idTouser event[]  @relation("event_director_idTouser")
  player                        player[]
}
